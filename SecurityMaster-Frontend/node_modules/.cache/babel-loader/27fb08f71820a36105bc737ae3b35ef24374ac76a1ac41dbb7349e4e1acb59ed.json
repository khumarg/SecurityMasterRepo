{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kgirdhar\\\\Desktop\\\\Case Study\\\\SecurityMaster\\\\FrontEnd\\\\securitymaster\\\\src\\\\components\\\\equities\\\\UpdateEquity.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEquity = () => {\n  _s();\n  const [id, setId] = useState(0);\n  const [data, setData] = useState({\n    securityId: 0,\n    securityName: '',\n    securityDescription: '',\n    hasPosition: '',\n    isActiveSecurity: '',\n    lotSize: 0,\n    bbgUniqueName: '',\n    cusip: '',\n    isin: '',\n    sedol: '',\n    bloombergTicker: '',\n    bloombergUniqueId: '',\n    bbgGlobalId: '',\n    tickerAndExchange: '',\n    isAdrFlag: '',\n    adrUnderlyingTicker: '',\n    adrUnderlyingCurrency: '',\n    sharesPerAdr: '',\n    ipoDate: '',\n    pricingCurrency: '',\n    settleDays: 0,\n    totalSharesOutstanding: 0.0,\n    votingRightsPerShare: 0.0,\n    averageVolume20d: 0.0,\n    beta: 0.0,\n    shortInterest: 0.0,\n    returnYtd: 0.0,\n    volatility90d: 0.0,\n    pfAssetClass: '',\n    pfCountry: '',\n    pfCreditRating: '',\n    pfCurrency: '',\n    pfInstrument: '',\n    pfLiquidityProfile: '',\n    pfMaturity: '',\n    pfNaicsCode: '',\n    pfRegion: '',\n    pfSector: '',\n    pfSubAssetClass: '',\n    countryOfIssuance: '',\n    exchange: '',\n    issuer: '',\n    issueCurrency: '',\n    tradingCurrency: '',\n    bbgIndustrySubGroup: '',\n    bloombergIndustryGroup: '',\n    bloombergSector: '',\n    countryOfIncorporation: '',\n    riskCurrency: '',\n    openPrice: 0.0,\n    closePrice: 0.0,\n    volume: 0.0,\n    lastPrice: 0.0,\n    askPrice: 0.0,\n    bidPrice: 0.0,\n    peRatio: 0.0,\n    dividendDeclaredDate: '',\n    dividendExDate: '',\n    dividendRecordDate: '',\n    dividendPayDate: '',\n    dividendAmount: 0.0,\n    frequency: '',\n    dividendType: ''\n  });\n  const [flag, setFlag] = useState(false);\n  const clickHandler = event => {\n    axios.get(`https://localhost:7126/api/Equities/${id}`).then(res => {\n      console.log(res.data);\n      setFlag(true);\n      setData(res.data);\n    }).catch(error => {\n      console.log(error.message);\n      setFlag(false);\n    });\n    event.preventDefault();\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const submitHandler = event => {\n    axios.put(`https://localhost:7126/api/Equities/Edit/${id}`, data).then(response => {\n      console.log(response.data);\n      setData(response.data);\n      setFlag(true);\n      alert(`Equity ID: ${id} Updated Successfully!`);\n    }).catch(error => {\n      console.log(error);\n      setFlag(false);\n      alert(\"Equity could not be updated!\");\n    });\n  };\n  if (flag === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Equity By ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: clickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter SecurityID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"getByID-input-box\",\n          type: \"text\",\n          value: id,\n          onChange: event => setId(event.target.value),\n          placeholder: \"Enter SecurityID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchBtn\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this);\n  } else {}\n};\n_s(UpdateEquity, \"y7pFqFl6NOtyQEOqcOtf2N7Bigs=\");\n_c = UpdateEquity;\nexport default UpdateEquity;\nvar _c;\n$RefreshReg$(_c, \"UpdateEquity\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UpdateEquity","_s","id","setId","data","setData","securityId","securityName","securityDescription","hasPosition","isActiveSecurity","lotSize","bbgUniqueName","cusip","isin","sedol","bloombergTicker","bloombergUniqueId","bbgGlobalId","tickerAndExchange","isAdrFlag","adrUnderlyingTicker","adrUnderlyingCurrency","sharesPerAdr","ipoDate","pricingCurrency","settleDays","totalSharesOutstanding","votingRightsPerShare","averageVolume20d","beta","shortInterest","returnYtd","volatility90d","pfAssetClass","pfCountry","pfCreditRating","pfCurrency","pfInstrument","pfLiquidityProfile","pfMaturity","pfNaicsCode","pfRegion","pfSector","pfSubAssetClass","countryOfIssuance","exchange","issuer","issueCurrency","tradingCurrency","bbgIndustrySubGroup","bloombergIndustryGroup","bloombergSector","countryOfIncorporation","riskCurrency","openPrice","closePrice","volume","lastPrice","askPrice","bidPrice","peRatio","dividendDeclaredDate","dividendExDate","dividendRecordDate","dividendPayDate","dividendAmount","frequency","dividendType","flag","setFlag","clickHandler","event","get","then","res","console","log","catch","error","message","preventDefault","handleChange","e","name","value","target","prevState","submitHandler","put","response","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","onChange","placeholder","msg","_c","$RefreshReg$"],"sources":["C:/Users/kgirdhar/Desktop/Case Study/SecurityMaster/FrontEnd/securitymaster/src/components/equities/UpdateEquity.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst UpdateEquity = () => {\r\n    const [id, setId] = useState(0)\r\n    const [data, setData] = useState({\r\n      securityId: 0,\r\n      securityName: '',\r\n      securityDescription: '',\r\n      hasPosition: '',\r\n      isActiveSecurity: '',\r\n      lotSize: 0,\r\n      bbgUniqueName: '',\r\n      cusip: '',\r\n      isin: '',\r\n      sedol: '',\r\n      bloombergTicker: '',\r\n      bloombergUniqueId: '',\r\n      bbgGlobalId: '',\r\n      tickerAndExchange: '',\r\n      isAdrFlag: '',\r\n      adrUnderlyingTicker: '',\r\n      adrUnderlyingCurrency: '',\r\n      sharesPerAdr: '',\r\n      ipoDate: '',\r\n      pricingCurrency: '',\r\n      settleDays: 0,\r\n      totalSharesOutstanding: 0.0,\r\n      votingRightsPerShare: 0.0,\r\n      averageVolume20d: 0.0,\r\n      beta: 0.0,\r\n      shortInterest: 0.0,\r\n      returnYtd: 0.0,\r\n      volatility90d: 0.0,\r\n      pfAssetClass: '',\r\n      pfCountry: '',\r\n      pfCreditRating: '',\r\n      pfCurrency: '',\r\n      pfInstrument: '',\r\n      pfLiquidityProfile: '',\r\n      pfMaturity: '',\r\n      pfNaicsCode: '',\r\n      pfRegion: '',\r\n      pfSector: '',\r\n      pfSubAssetClass: '',\r\n      countryOfIssuance: '',\r\n      exchange: '',\r\n      issuer: '',\r\n      issueCurrency: '',\r\n      tradingCurrency: '',\r\n      bbgIndustrySubGroup: '',\r\n      bloombergIndustryGroup: '',\r\n      bloombergSector: '',\r\n      countryOfIncorporation: '',\r\n      riskCurrency: '',\r\n      openPrice: 0.0,\r\n      closePrice: 0.0,\r\n      volume: 0.0,\r\n      lastPrice: 0.0,\r\n      askPrice: 0.0,\r\n      bidPrice: 0.0,\r\n      peRatio: 0.0,\r\n      dividendDeclaredDate: '',\r\n      dividendExDate: '',\r\n      dividendRecordDate: '',\r\n      dividendPayDate: '',\r\n      dividendAmount: 0.0,\r\n      frequency: '',\r\n      dividendType: '',\r\n    })\r\n\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    const clickHandler = (event) => {\r\n      axios.get(`https://localhost:7126/api/Equities/${id}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setFlag(true)\r\n\r\n                setData(res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n\r\n                setFlag(false)\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n      axios.put(`https://localhost:7126/api/Equities/Edit/${id}`, data)\r\n        .then(response => {\r\n          console.log(response.data)\r\n\r\n          setData(response.data)\r\n          setFlag(true)\r\n\r\n          alert(`Equity ID: ${id} Updated Successfully!`)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          setFlag(false)\r\n\r\n          alert(\"Equity could not be updated!\")\r\n        })\r\n    }\r\n\r\n    if(flag === false) {\r\n      return (\r\n        <div>\r\n            <h2>Get Equity By ID</h2>\r\n            <form onSubmit={clickHandler}>\r\n                <label>Enter SecurityID: </label>\r\n                <input className='getByID-input-box' type='text' value={id} onChange={(event) => setId(event.target.value)} placeholder='Enter SecurityID'></input>\r\n                <button className='searchBtn' type='submit'>Search</button>\r\n            </form>\r\n            <h2>{msg}</h2>\r\n        </div>\r\n      )\r\n    } else {\r\n\r\n    }\r\n}\r\n\r\nexport default UpdateEquity\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}